#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y     &kp U  &kp I      &kp O    &kp P     &kp LBKT
&kp LSHFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H     &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N     &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RBKT
                         &kp LALT  &mo 1  &kp SPACE    &kp BSPC  &mo 2  &kp RET
            >;
        };

        layer_1 {
            bindings = <
&kp ESC  &kp GRAVE  &trans  &trans  &trans  &trans    &kp PSCRN  &kp PG_UP  &trans    &kp SPACE  &kp UP    &kp ENTER
&trans   &trans     &trans  &trans  &trans  &trans    &kp DEL    &kp PG_DN  &trans    &kp LEFT   &kp DOWN  &kp RIGHT
&trans   &kp N1     &kp N2  &kp N3  &kp N4  &kp N5    &kp N6     &kp N7     &kp N8    &kp N9     &kp N0    &trans
                            &trans  &trans  &trans    &trans     &mo 3      &kp CAPS
            >;
        };

        layer_2 {
            bindings = <
&trans  &kp LS(EXCL)  &kp LS(AT)   &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)   &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &kp MINUS
&trans  &kp LSHFT     &kp LS(DQT)  &kp LSHFT      &kp LS(SEMI)  &kp LS(PRCNT)    &kp LS(COLON)  &kp LS(QMARK)  &kp LSHFT     &kp LS(LBRC)  &kp LS(RBRC)  &kp EQUAL
&trans  &trans        &trans       &trans         &trans        &trans           &trans         &trans         &trans        &trans        &trans        &kp BSLH
                                   &trans         &mo 3         &trans           &trans         &trans         &trans
            >;
        };

        layer_3 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
